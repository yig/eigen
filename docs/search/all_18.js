var searchData=
[
  ['t_20care_20about_20optimal_20vectorization_20how_20do_20i_20get_20rid_20of_20that_20stuff_0',['I don&apos;t care about optimal vectorization, how do I get rid of that stuff?',['../group__TopicUnalignedArrayAssert.html#getrid',1,'']]],
  ['tag_1',['Tag',['../classEigen_1_1symbolic_1_1SymbolExpr.html#af2c04ad1ee1251a2d540f0d804da4c68',1,'Eigen::symbolic::SymbolExpr']]],
  ['taking_20a_20plain_20matrix_20or_20array_20argument_20fail_2',['In which cases do functions taking a plain Matrix or Array argument fail?',['../TopicFunctionTakingEigenTypes.html#TopicPlainFunctionsFailing',1,'']]],
  ['taking_20eigen_20types_20as_20parameters_3',['Writing Functions Taking Eigen Types as Parameters',['../TopicFunctionTakingEigenTypes.html',1,'UserManual_Generalities']]],
  ['taking_20plain_20matrix_20or_20array_20arguments_20work_4',['In which cases do functions taking plain Matrix or Array arguments work?',['../TopicFunctionTakingEigenTypes.html#TopicPlainFunctionsWorking',1,'']]],
  ['tan_5',['tan',['../namespaceEigen.html#a6cbbf4f8fc0ed7b7f8c95d2aa8d14d9c',1,'Eigen']]],
  ['tanh_6',['tanh',['../namespaceEigen.html#acb2bc85c6d81b8a55a18c4d76ae929f7',1,'Eigen']]],
  ['template_20and_20typename_20keywords_20in_20c_7',['The template and typename keywords in C++',['../TopicTemplateKeyword.html',1,'UserManual_Generalities']]],
  ['template_20and_20typename_20keywords_20to_20define_20templates_8',['Using the template and typename keywords to define templates',['../TopicTemplateKeyword.html#TopicTemplateKeywordToDefineTemplates',1,'']]],
  ['template_20keyword_9',['An example showing the second use of the template keyword',['../TopicTemplateKeyword.html#TopicTemplateKeywordExample',1,'']]],
  ['template_20methods_10',['Compilation error with template methods',['../TopicPitfalls.html#TopicPitfalls_template_keyword',1,'']]],
  ['template_20parameters_11',['template parameters',['../group__TutorialMatrixClass.html#TutorialMatrixOptTemplParams',1,'Optional template parameters'],['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_conditional',1,'What if I want to do this conditionally (depending on template parameters) ?']]],
  ['template_20parameters_20of_20matrix_12',['The first three template parameters of Matrix',['../group__TutorialMatrixClass.html#TutorialMatrixFirst3Params',1,'']]],
  ['templated_20function_13',['How to write generic, but non-templated function?',['../TopicFunctionTakingEigenTypes.html#TopicUsingRefClass',1,'']]],
  ['templates_14',['templates',['../group__TutorialMatrixArithmetic.html#TutorialArithmeticMentionXprTemplates',1,'A note about expression templates'],['../TopicTemplateKeyword.html#TopicTemplateKeywordToDefineTemplates',1,'Using the template and typename keywords to define templates']]],
  ['templates_20in_20eigen_15',['Expression templates in Eigen',['../TopicEigenExpressionTemplates.html',1,'UnclassifiedPages']]],
  ['temporaries_16',['Which sub-expressions are evaluated into temporaries?',['../TopicLazyEvaluation.html#TopicLazyEvaluationWhichExpr',1,'']]],
  ['temporary_20objects_17',['Usage as temporary objects',['../group__TutorialAdvancedInitialization.html#TutorialAdvancedInitializationTemporaryObjects',1,'']]],
  ['terminology_18',['Terminology',['../group__TopicLinearAlgebraDecompositions.html#TopicLinAlgTerminology',1,'']]],
  ['ternary_20operator_19',['Ternary operator',['../TopicPitfalls.html#TopicPitfalls_ternary_operator',1,'']]],
  ['testing_20',['A simple main function for testing',['../TopicNewExpressionType.html#TopicMain',1,'']]],
  ['that_20stuff_21',['I don&apos;t care about optimal vectorization, how do I get rid of that stuff?',['../group__TopicUnalignedArrayAssert.html#getrid',1,'']]],
  ['the_20array_20class_22',['What is the Array class?',['../group__TutorialArrayClass.html#TutorialArrayClassIntro',1,'']]],
  ['the_20array_20class_20and_20coefficient_20wise_20operations_23',['The Array class and coefficient-wise operations',['../group__TutorialArrayClass.html',1,'']]],
  ['the_20assertion_20on_20unaligned_20arrays_24',['Explanation of the assertion on unaligned arrays',['../group__TopicUnalignedArrayAssert.html',1,'']]],
  ['the_20assignment_25',['The assignment',['../TopicInsideEigenExample.html#Assignment',1,'']]],
  ['the_20auto_20keyword_26',['C++11 and the auto keyword',['../TopicPitfalls.html#TopicPitfalls_auto_keyword',1,'']]],
  ['the_20beginning_20of_20my_20class_27',['Should I then put all the members of Eigen types at the beginning of my class?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_movetotop',1,'']]],
  ['the_20case_20of_20std_3a_3avector_28',['The case of std::vector',['../group__TopicStlContainers.html#StlContainers_vector',1,'']]],
  ['the_20cause_20of_20the_20problem_29',['Where in my own code is the cause of the problem?',['../group__TopicUnalignedArrayAssert.html#where',1,'']]],
  ['the_20class_20hierarchy_30',['The class hierarchy',['../TopicClassHierarchy.html',1,'UserManual_UnderstandingEigen']]],
  ['the_20comma_20initializer_31',['The comma initializer',['../group__TutorialAdvancedInitialization.html#TutorialAdvancedInitializationCommaInitializer',1,'']]],
  ['the_20computation_20from_20the_20construction_32',['Separating the computation from the construction',['../group__TutorialLinearAlgebra.html#TutorialLinAlgSeparateComputation',1,'']]],
  ['the_20compute_20step_33',['The Compute Step',['../group__TopicSparseSystems.html#TheSparseCompute',1,'']]],
  ['the_20construction_34',['Separating the computation from the construction',['../group__TutorialLinearAlgebra.html#TutorialLinAlgSeparateComputation',1,'']]],
  ['the_20core_20classes_35',['The core classes',['../TopicClassHierarchy.html#TopicClassHierarchyCoreClasses',1,'']]],
  ['the_20core_20module_36',['Experimental parts of the Core module',['../Experimental.html#Experimental_core',1,'']]],
  ['the_20entry_20point_37',['The entry point',['../TopicNewExpressionType.html#TopicEntry',1,'']]],
  ['the_20evaluator_38',['The evaluator',['../TopicNewExpressionType.html#TopicEvaluator',1,'']]],
  ['the_20expression_20class_39',['The expression class',['../TopicNewExpressionType.html#TopicExpression',1,'']]],
  ['the_20first_20program_40',['Explanation of the first program',['../GettingStarted.html#GettingStartedExplanation',1,'']]],
  ['the_20first_20three_20template_20parameters_20of_20matrix_41',['The first three template parameters of Matrix',['../group__TutorialMatrixClass.html#TutorialMatrixFirst3Params',1,'']]],
  ['the_20map_20class_42',['Interfacing with raw buffers: the Map class',['../group__TutorialMapClass.html',1,'']]],
  ['the_20mapped_20array_43',['Changing the mapped array',['../group__TutorialMapClass.html#TutorialMapPlacementNew',1,'']]],
  ['the_20matrix_20class_44',['The Matrix class',['../group__TutorialMatrixClass.html',1,'']]],
  ['the_20members_20of_20eigen_20types_20at_20the_20beginning_20of_20my_20class_45',['Should I then put all the members of Eigen types at the beginning of my class?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_movetotop',1,'']]],
  ['the_20problem_46',['Where in my own code is the cause of the problem?',['../group__TopicUnalignedArrayAssert.html#where',1,'']]],
  ['the_20qr_20decomposition_47',['Using the QR decomposition',['../group__LeastSquares.html#LeastSquaresQR',1,'']]],
  ['the_20second_20example_48',['Explanation of the second example',['../GettingStarted.html#GettingStartedExplanation2',1,'']]],
  ['the_20second_20use_20of_20the_20template_20keyword_49',['An example showing the second use of the template keyword',['../TopicTemplateKeyword.html#TopicTemplateKeywordExample',1,'']]],
  ['the_20setting_50',['The setting',['../TopicNewExpressionType.html#TopicSetting',1,'']]],
  ['the_20solve_20step_51',['The Solve step',['../group__TopicSparseSystems.html#TheSparseSolve',1,'']]],
  ['the_20sparsematrix_20class_52',['The SparseMatrix class',['../group__TutorialSparse.html#TutorialSparseSparseMatrix',1,'']]],
  ['the_20special_20value_20dynamic_53',['The special value Dynamic',['../group__TutorialMatrixClass.html#TutorialMatrixDynamic',1,'']]],
  ['the_20sum_20expression_54',['Construction of the sum expression',['../TopicInsideEigenExample.html#ConstructionOfSumXpr',1,'']]],
  ['the_20svd_20decomposition_55',['Using the SVD decomposition',['../group__LeastSquares.html#LeastSquaresSVD',1,'']]],
  ['the_20template_20and_20typename_20keywords_20in_20c_56',['The template and typename keywords in C++',['../TopicTemplateKeyword.html',1,'UserManual_Generalities']]],
  ['the_20template_20and_20typename_20keywords_20to_20define_20templates_57',['Using the template and typename keywords to define templates',['../TopicTemplateKeyword.html#TopicTemplateKeywordToDefineTemplates',1,'']]],
  ['the_20template_20keyword_58',['An example showing the second use of the template keyword',['../TopicTemplateKeyword.html#TopicTemplateKeywordExample',1,'']]],
  ['the_20traits_20class_59',['The traits class',['../TopicNewExpressionType.html#TopicTraits',1,'']]],
  ['then_20put_20all_20the_20members_20of_20eigen_20types_20at_20the_20beginning_20of_20my_20class_60',['Should I then put all the members of Eigen types at the beginning of my class?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_movetotop',1,'']]],
  ['this_20a_20bug_20in_20eigen_61',['So is this a bug in Eigen?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_bugineigen',1,'']]],
  ['this_20assertion_62',['General explanation of this assertion',['../group__TopicUnalignedArrayAssert.html#explanation',1,'']]],
  ['this_20conditionally_20depending_20on_20template_20parameters_63',['What if I want to do this conditionally (depending on template parameters) ?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_conditional',1,'']]],
  ['this_20needed_64',['Why is this needed?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_why',1,'']]],
  ['threaded_20application_65',['Using Eigen in a multi-threaded application',['../TopicMultiThreading.html#TopicMultiThreading_UsingEigenWithMT',1,'']]],
  ['threading_66',['Eigen and multi-threading',['../TopicMultiThreading.html',1,'UserManual_Generalities']]],
  ['threadpool_20module_67',['ThreadPool Module',['../group__ThreadPool__Module.html',1,'']]],
  ['three_20template_20parameters_20of_20matrix_68',['The first three template parameters of Matrix',['../group__TutorialMatrixClass.html#TutorialMatrixFirst3Params',1,'']]],
  ['threshold_69',['threshold',['../classEigen_1_1FullPivLU.html#abdffac048d2d5e6f120012b6353b7811',1,'Eigen::FullPivLU::threshold()'],['../classEigen_1_1ColPivHouseholderQR.html#ad53f7900b6c7f0ca323ec9b790985e26',1,'Eigen::ColPivHouseholderQR::threshold()'],['../classEigen_1_1CompleteOrthogonalDecomposition.html#a6bba1c61a11da8e5c437a591757a7e84',1,'Eigen::CompleteOrthogonalDecomposition::threshold()'],['../classEigen_1_1FullPivHouseholderQR.html#afb017cb8869773a4d6beaf2909fa0f84',1,'Eigen::FullPivHouseholderQR::threshold()'],['../classEigen_1_1SVDBase.html#a98b2ee98690358951807353812a05c69',1,'Eigen::SVDBase::threshold()']]],
  ['through_70',['Through',['../classEigen_1_1Hyperplane.html#a0043925c28a90328d3fb9edf27380824',1,'Eigen::Hyperplane::Through(const VectorType &amp;p0, const VectorType &amp;p1)'],['../classEigen_1_1Hyperplane.html#a6e8eb0508c38957fd946bd4053e8c555',1,'Eigen::Hyperplane::Through(const VectorType &amp;p0, const VectorType &amp;p1, const VectorType &amp;p2)'],['../classEigen_1_1ParametrizedLine.html#ad6c26492142e8d681d707db7865e822c',1,'Eigen::ParametrizedLine::Through()']]],
  ['time_20size_20and_20increment_71',['Compile time size and increment',['../group__TutorialSlicingIndexing.html#TutorialSlicingFixed',1,'']]],
  ['to_20be_20changed_72',['What kind of code needs to be changed?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_what',1,'']]],
  ['to_20choose_73',['Which storage order to choose?',['../group__TopicStorageOrders.html#TopicStorageOrdersWhich',1,'']]],
  ['to_20compile_74',['Header Issues (failure to compile)',['../TopicPitfalls.html#TopicPitfalls_header_issues',1,'']]],
  ['to_20define_20templates_75',['Using the template and typename keywords to define templates',['../TopicTemplateKeyword.html#TopicTemplateKeywordToDefineTemplates',1,'']]],
  ['to_20do_20this_20conditionally_20depending_20on_20template_20parameters_76',['What if I want to do this conditionally (depending on template parameters) ?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_conditional',1,'']]],
  ['to_20external_20solvers_77',['Wrappers to external solvers',['../group__TopicSparseSystems.html#TutorialSparseSolverList_Wrapper',1,'']]],
  ['to_20functions_78',['Passing Eigen objects by value to functions',['../group__TopicPassingByValue.html',1,'']]],
  ['to_20go_20from_20here_79',['Where to go from here?',['../GettingStarted.html#GettingStartedConclusion',1,'']]],
  ['to_20install_20eigen_80',['How to &quot;install&quot; Eigen?',['../GettingStarted.html#GettingStartedInstallation',1,'']]],
  ['to_20resize_20matrices_20in_20generic_20implementations_81',['How to resize matrices in generic implementations?',['../TopicFunctionTakingEigenTypes.html#TopicResizingInGenericImplementations',1,'']]],
  ['to_20write_20generic_20but_20non_20templated_20function_82',['How to write generic, but non-templated function?',['../TopicFunctionTakingEigenTypes.html#TopicUsingRefClass',1,'']]],
  ['todensematrix_83',['toDenseMatrix',['../classEigen_1_1DiagonalBase.html#a563753c8ab6bb1ad40d88e141e6c6913',1,'Eigen::DiagonalBase::toDenseMatrix()'],['../classEigen_1_1PermutationBase.html#addfa91a2c2c69c76159f1091368a505f',1,'Eigen::PermutationBase::toDenseMatrix()'],['../classEigen_1_1SkewSymmetricBase.html#a3242cc043c566cfed75c68a671f2844f',1,'Eigen::SkewSymmetricBase::toDenseMatrix()']]],
  ['tolerance_84',['tolerance',['../classEigen_1_1IterativeSolverBase.html#acb442c19b5858d6b9be813dd7d36cc62',1,'Eigen::IterativeSolverBase']]],
  ['topics_85',['General topics',['../UserManual_Generalities.html',1,'index']]],
  ['topleft_86',['TopLeft',['../classEigen_1_1AlignedBox.html#ae4aa935b36004fffc49c7a3a85e2d378a1a18651b4a33f61755894bf8ff31ea14',1,'Eigen::AlignedBox']]],
  ['topleftceil_87',['TopLeftCeil',['../classEigen_1_1AlignedBox.html#ae4aa935b36004fffc49c7a3a85e2d378a485cc6b5a858aee6971bb1bc57ad4efa',1,'Eigen::AlignedBox']]],
  ['topleftfloor_88',['TopLeftFloor',['../classEigen_1_1AlignedBox.html#ae4aa935b36004fffc49c7a3a85e2d378a32a1f777fd1b8d8cad52b8ff1eb5dea7',1,'Eigen::AlignedBox']]],
  ['topright_89',['TopRight',['../classEigen_1_1AlignedBox.html#ae4aa935b36004fffc49c7a3a85e2d378a2827ffa8813d2080e2ef7ddd1115175a',1,'Eigen::AlignedBox']]],
  ['toprightceil_90',['TopRightCeil',['../classEigen_1_1AlignedBox.html#ae4aa935b36004fffc49c7a3a85e2d378ada703fccfe797c21bc5943e2e933b84d',1,'Eigen::AlignedBox']]],
  ['toprightfloor_91',['TopRightFloor',['../classEigen_1_1AlignedBox.html#ae4aa935b36004fffc49c7a3a85e2d378a8429f957ccb88065020de445c39c49f7',1,'Eigen::AlignedBox']]],
  ['toqtransform_92',['toQTransform',['../classEigen_1_1Transform.html#ae954e369a06472f44b72b199beb83cd2',1,'Eigen::Transform']]],
  ['torotationmatrix_93',['toRotationMatrix',['../classEigen_1_1AngleAxis.html#ad333c1b13aa0fa01d7fab30f18d2cd46',1,'Eigen::AngleAxis::toRotationMatrix()'],['../classEigen_1_1QuaternionBase.html#a8cf07ab9875baba2eecdd62ff93bfc3f',1,'Eigen::QuaternionBase::toRotationMatrix()'],['../classEigen_1_1Rotation2D.html#a961167d84c8b9a989f2ba8609a6afcaf',1,'Eigen::Rotation2D::toRotationMatrix()'],['../classEigen_1_1RotationBase.html#ac69c68d9a256dd0d369b0f32c2b654e1',1,'Eigen::RotationBase::toRotationMatrix()']]],
  ['trace_94',['trace',['../classEigen_1_1MatrixBase.html#a544b609f65eb2bd3e368b3fc2d79479e',1,'Eigen::MatrixBase']]],
  ['traits_20class_95',['The traits class',['../TopicNewExpressionType.html#TopicTraits',1,'']]],
  ['transform_96',['Transform',['../classEigen_1_1Transform.html',1,'Eigen::Transform&lt; Scalar_, Dim_, Mode_, Options_ &gt;'],['../classEigen_1_1Transform.html#ae6a48c9326e794b8da277f4b15aa92d1',1,'Eigen::Transform::Transform()'],['../classEigen_1_1Transform.html#ab1e42db8cdffea634f4094d56850ab6e',1,'Eigen::Transform::Transform(const EigenBase&lt; OtherDerived &gt; &amp;other)'],['../classEigen_1_1Transform.html#a63e9a5b9cf964921c24023dd680dee6d',1,'Eigen::Transform::Transform(const QTransform &amp;other)'],['../classEigen_1_1Transform.html#aac6142c294732a1ce692799c908fa81a',1,'Eigen::Transform::Transform(const Transform&lt; OtherScalarType, Dim, Mode, Options &gt; &amp;other)']]],
  ['transform_97',['transform',['../classEigen_1_1AlignedBox.html#ab5e6ce8af190d79ef479c457269f821b',1,'Eigen::AlignedBox::transform(const typename Transform&lt; Scalar, AmbientDimAtCompileTime, Mode, Options &gt;::TranslationType &amp;translation)'],['../classEigen_1_1AlignedBox.html#a1bd68c93f4eff68bea3a446178c22945',1,'Eigen::AlignedBox::transform(const Transform&lt; Scalar, AmbientDimAtCompileTime, Mode, Options &gt; &amp;transform)'],['../classEigen_1_1Hyperplane.html#a007f0b10f4a554b956f427b0e835c692',1,'Eigen::Hyperplane::transform(const MatrixBase&lt; XprType &gt; &amp;mat, TransformTraits traits=Affine)'],['../classEigen_1_1Hyperplane.html#af838d98977a2ebab2d71d998a6f89c20',1,'Eigen::Hyperplane::transform(const Transform&lt; Scalar, AmbientDimAtCompileTime, Affine, TrOptions &gt; &amp;t, TransformTraits traits=Affine)'],['../classEigen_1_1ParametrizedLine.html#a22204ecac4c9b35b32478aeacbfc96ee',1,'Eigen::ParametrizedLine::transform(const MatrixBase&lt; XprType &gt; &amp;mat, TransformTraits traits=Affine)'],['../classEigen_1_1ParametrizedLine.html#a1bf0e19d7443d4f9c4b1f7667c5b98b0',1,'Eigen::ParametrizedLine::transform(const Transform&lt; Scalar, AmbientDimAtCompileTime, Affine, TrOptions &gt; &amp;t, TransformTraits traits=Affine)']]],
  ['transformation_20types_98',['Transformation types',['../group__TutorialGeometry.html#TutorialGeoElementaryTransformations',1,'']]],
  ['transformation_20types_99',['Common API across transformation types',['../group__TutorialGeometry.html#TutorialGeoCommontransformationAPI',1,'']]],
  ['transformations_100',['transformations',['../group__TutorialGeometry.html#TutorialGeoTransform',1,'Affine transformations'],['../group__TutorialGeometry.html',1,'Space transformations']]],
  ['transformed_101',['transformed',['../classEigen_1_1AlignedBox.html#a368af7d5cb71110605a4509138354528',1,'Eigen::AlignedBox']]],
  ['transformtimediagonalreturntype_102',['TransformTimeDiagonalReturnType',['../classEigen_1_1Transform.html#a5b112189e216dbd75561c4debc9bf6c6',1,'Eigen::Transform']]],
  ['transformtraits_103',['TransformTraits',['../group__enums.html#gaee59a86102f150923b0cac6d4ff05107',1,'Eigen']]],
  ['translate_104',['translate',['../classEigen_1_1AlignedBox.html#af6f7f6e16cc99397e88e4f24e6982e86',1,'Eigen::AlignedBox::translate()'],['../classEigen_1_1Transform.html#aed6ad6578cad1f7c7509947d1526c683',1,'Eigen::Transform::translate()']]],
  ['translated_105',['translated',['../classEigen_1_1AlignedBox.html#a6efd4eb4864791f7bc760cb83e2a2f8e',1,'Eigen::AlignedBox']]],
  ['translation_106',['Translation',['../classEigen_1_1Translation.html',1,'Eigen::Translation&lt; Scalar_, Dim_ &gt;'],['../classEigen_1_1Translation.html#a990217464b0e61173cccf8ec51983730',1,'Eigen::Translation::Translation()'],['../classEigen_1_1Translation.html#a0e2768311cee12f18cd2eacda3490318',1,'Eigen::Translation::Translation(const VectorType &amp;vector)'],['../classEigen_1_1Translation.html#aed3a02ab3b307ffae4f90aa330d142d8',1,'Eigen::Translation::Translation(const Translation&lt; OtherScalarType, Dim &gt; &amp;other)']]],
  ['translation_107',['translation',['../classEigen_1_1Transform.html#a539fc3e91b20a43613bfefb8a4fb8a0e',1,'Eigen::Transform::translation() const'],['../classEigen_1_1Transform.html#afbb1026d0b81b51fea103bd8fc947f57',1,'Eigen::Transform::translation()']]],
  ['translationpart_108',['TranslationPart',['../classEigen_1_1Transform.html#a243b6410a606c2125e7d2734b331bedb',1,'Eigen::Transform']]],
  ['translationtype_109',['TranslationType',['../classEigen_1_1Transform.html#af2ec56175cb89206f34e68c1d1b36c5f',1,'Eigen::Transform']]],
  ['transpose_110',['Transpose',['../classEigen_1_1Transpose.html',1,'Eigen']]],
  ['transpose_111',['transpose',['../classEigen_1_1DenseBase.html#a43cbcd866a0737eb56642c2e992f0afd',1,'Eigen::DenseBase::transpose()'],['../classEigen_1_1DenseBase.html#a59eb71a8633da26de5e3e03351b2291e',1,'Eigen::DenseBase::transpose() const'],['../classEigen_1_1PermutationBase.html#a05805e9f4182eec3f6632e1c765b5ffe',1,'Eigen::PermutationBase::transpose()'],['../classEigen_1_1SelfAdjointView.html#a229e37c4acc40a21f31a2dbdb464f381',1,'Eigen::SelfAdjointView::transpose(std::enable_if_t&lt; Eigen::internal::is_lvalue&lt; MatrixType &gt;::value, Dummy * &gt;=nullptr)'],['../classEigen_1_1SelfAdjointView.html#aae8442eeafe678af07e46869ae610283',1,'Eigen::SelfAdjointView::transpose() const'],['../classEigen_1_1SkewSymmetricBase.html#af51e1f2f953c631fc57dd93ecfa64223',1,'Eigen::SkewSymmetricBase::transpose()'],['../classEigen_1_1SolverBase.html#a70cf5cd1b31dbb4f4d61c436c83df6d3',1,'Eigen::SolverBase::transpose()'],['../classEigen_1_1TriangularView.html#a1ce0d4bf861752dad758104d3e700dfc',1,'Eigen::TriangularView::transpose(std::enable_if_t&lt; Eigen::internal::is_lvalue&lt; MatrixType &gt;::value, Dummy * &gt;=nullptr)'],['../classEigen_1_1TriangularView.html#a5155b6abdfe67f5e2b3e48a885c62b55',1,'Eigen::TriangularView::transpose() const'],['../classEigen_1_1HouseholderSequence.html#ae0959abb2cfa16c9df2e5782e721811c',1,'Eigen::HouseholderSequence::transpose()'],['../classEigen_1_1JacobiRotation.html#ab40e9cdc4582593511e57ee896e055a2',1,'Eigen::JacobiRotation::transpose()'],['../classEigen_1_1SparseLU.html#af05e6d3b85dc27bd7ec0b3ef9380a9de',1,'Eigen::SparseLU::transpose()']]],
  ['transposeinplace_112',['transposeInPlace',['../classEigen_1_1DenseBase.html#ac501bd942994af7a95d95bee7a16ad2a',1,'Eigen::DenseBase']]],
  ['transposition_20and_20conjugation_113',['Transposition and conjugation',['../group__TutorialMatrixArithmetic.html#TutorialArithmeticTranspose',1,'']]],
  ['transpositions_114',['Transpositions',['../classEigen_1_1Transpositions.html',1,'Eigen::Transpositions&lt; SizeAtCompileTime, MaxSizeAtCompileTime, StorageIndex_ &gt;'],['../classEigen_1_1Transpositions.html#a00bfbe6d1616a1416fda70dded20d12f',1,'Eigen::Transpositions::Transpositions(const TranspositionsBase&lt; OtherDerived &gt; &amp;other)'],['../classEigen_1_1Transpositions.html#ae574c902f293b7fa5135ca377fd74f11',1,'Eigen::Transpositions::Transpositions(const MatrixBase&lt; Other &gt; &amp;indices)'],['../classEigen_1_1Transpositions.html#a9e16faa36124c9cc6ce76f60ee17906a',1,'Eigen::Transpositions::Transpositions(Index size)']]],
  ['transpositions_3c_20rowsatcompiletime_2c_20maxrowsatcompiletime_20_3e_115',['Transpositions&lt; RowsAtCompileTime, MaxRowsAtCompileTime &gt;',['../classEigen_1_1Transpositions.html',1,'Eigen']]],
  ['transpositions_3c_20rowsatcompiletime_2c_20maxrowsatcompiletime_2c_20permutationindex_20_3e_116',['Transpositions&lt; RowsAtCompileTime, MaxRowsAtCompileTime, PermutationIndex &gt;',['../classEigen_1_1Transpositions.html',1,'Eigen']]],
  ['transpositionsp_117',['transpositionsP',['../classEigen_1_1LDLT.html#a014db22579445edf30b53d31e904dcf8',1,'Eigen::LDLT']]],
  ['transpositionsstorage_118',['TranspositionsStorage',['../structEigen_1_1TranspositionsStorage.html',1,'Eigen']]],
  ['triangular_20and_20self_20adjoint_20matrices_119',['Diagonal, Triangular, and Self-adjoint matrices',['../group__QuickRefPage.html#QuickRef_DiagTriSymm',1,'']]],
  ['triangular_20and_20selfadjoint_20views_120',['Triangular and selfadjoint views',['../group__TutorialSparse.html#TutorialSparse_TriangularSelfadjoint',1,'']]],
  ['triangular_20views_121',['Triangular views',['../group__QuickRefPage.html#QuickRef_TriangularView',1,'']]],
  ['triangularbase_122',['TriangularBase',['../classEigen_1_1TriangularBase.html',1,'Eigen']]],
  ['triangularbase_3c_20selfadjointview_3c_20matrixtype_5f_2c_20uplo_20_3e_20_3e_123',['TriangularBase&lt; SelfAdjointView&lt; MatrixType_, UpLo &gt; &gt;',['../classEigen_1_1TriangularBase.html',1,'Eigen']]],
  ['triangularbase_3c_20triangularview_3c_20matrixtype_5f_2c_20mode_5f_20_3e_20_3e_124',['TriangularBase&lt; TriangularView&lt; MatrixType_, Mode_ &gt; &gt;',['../classEigen_1_1TriangularBase.html',1,'Eigen']]],
  ['triangularview_125',['TriangularView',['../classEigen_1_1TriangularView.html',1,'Eigen']]],
  ['triangularview_126',['triangularView',['../classEigen_1_1SelfAdjointView.html#a338803bf1e7fff892bc867b19c41866e',1,'Eigen::SelfAdjointView::triangularView()'],['../classEigen_1_1MatrixBase.html#a09be7b9dfc5dc6f201f9267f7c1cb950',1,'Eigen::MatrixBase::triangularView()'],['../classEigen_1_1MatrixBase.html#a78f02d00575cce35e9eec4a96ce6674e',1,'Eigen::MatrixBase::triangularView() const']]],
  ['triangularviewimpl_3c_20matrixtype_2c_20mode_2c_20sparse_20_3e_127',['TriangularViewImpl&lt; MatrixType, Mode, Sparse &gt;',['../classEigen_1_1TriangularViewImpl_3_01MatrixType_00_01Mode_00_01Sparse_01_4.html',1,'Eigen']]],
  ['triangularviewimpl_3c_20matrixtype_5f_2c_20mode_5f_2c_20dense_20_3e_128',['TriangularViewImpl&lt; MatrixType_, Mode_, Dense &gt;',['../classEigen_1_1TriangularViewImpl_3_01MatrixType___00_01Mode___00_01Dense_01_4.html',1,'Eigen']]],
  ['tridiagonalization_129',['Tridiagonalization',['../classEigen_1_1Tridiagonalization.html',1,'Eigen::Tridiagonalization&lt; MatrixType_ &gt;'],['../classEigen_1_1Tridiagonalization.html#a009d14f8e6e964f35560b3f339aac87a',1,'Eigen::Tridiagonalization::Tridiagonalization(Index size=Size==Dynamic ? 2 :Size)'],['../classEigen_1_1Tridiagonalization.html#aef97d3fd6892d66ba94ab83e206c1606',1,'Eigen::Tridiagonalization::Tridiagonalization(const EigenBase&lt; InputType &gt; &amp;matrix)']]],
  ['triplet_130',['Triplet',['../classEigen_1_1Triplet.html',1,'Eigen']]],
  ['trunc_131',['trunc',['../namespaceEigen.html#aa21c7219a0cad69beb6d7006502df249',1,'Eigen']]],
  ['tutorialsparse_5fexample_5fdetails_132',['TutorialSparse_example_details',['../TutorialSparse_example_details.html',1,'UnclassifiedPages']]],
  ['tweaking_133',['Alignment, vectorization and performance tweaking',['../TopicPreprocessorDirectives.html#TopicPreprocessorDirectivesPerformance',1,'']]],
  ['twistedby_134',['twistedBy',['../classEigen_1_1SparseMatrixBase.html#ad244a709f56230a8030b078a7ee889c6',1,'Eigen::SparseMatrixBase::twistedBy()'],['../classEigen_1_1SparseSelfAdjointView.html#a17dfbf197595acaf8b0d34bcde1e0e24',1,'Eigen::SparseSelfAdjointView::twistedBy()']]],
  ['type_135',['Adding a new expression type',['../TopicNewExpressionType.html',1,'UserManual_CustomizingEigen']]],
  ['typedefs_136',['typedefs',['../group__TutorialMatrixClass.html#TutorialMatrixTypedefs',1,'Convenience typedefs'],['../group__alignedboxtypedefs.html',1,'Global aligned box typedefs'],['../group__arraytypedefs.html',1,'Global array typedefs'],['../group__matrixtypedefs.html',1,'Global matrix typedefs']]],
  ['typename_20keywords_20in_20c_137',['The template and typename keywords in C++',['../TopicTemplateKeyword.html',1,'UserManual_Generalities']]],
  ['typename_20keywords_20to_20define_20templates_138',['Using the template and typename keywords to define templates',['../TopicTemplateKeyword.html#TopicTemplateKeywordToDefineTemplates',1,'']]],
  ['types_139',['types',['../group__TopicStlContainers.html#vector_spec',1,'An alternative - specializing std::vector for Eigen types'],['../group__TutorialArrayClass.html#TutorialArrayClassTypes',1,'Array types'],['../group__QuickRefPage.html#QuickRef_Types',1,'Array, matrix and vector types'],['../group__TutorialGeometry.html#TutorialGeoCommontransformationAPI',1,'Common API across transformation types'],['../TopicScalarTypes.html',1,'Scalar types'],['../group__TutorialGeometry.html#TutorialGeoElementaryTransformations',1,'Transformation types'],['../TopicCustomizing_CustomScalar.html',1,'Using custom scalar types']]],
  ['types_20and_20declaring_20map_20variables_140',['Map types and declaring Map variables',['../group__TutorialMapClass.html#TutorialMapTypes',1,'']]],
  ['types_20as_20parameters_141',['Writing Functions Taking Eigen Types as Parameters',['../TopicFunctionTakingEigenTypes.html',1,'UserManual_Generalities']]],
  ['types_20at_20the_20beginning_20of_20my_20class_142',['Should I then put all the members of Eigen types at the beginning of my class?',['../group__TopicStructHavingEigenMembers.html#StructHavingEigenMembers_movetotop',1,'']]]
];
